syntax = "proto2";

// Protobuf Python guide: https://protobuf.dev/getting-started/pythontutorial/#compiling-protocol-buffers
// Compile command: protoc --proto_path=api_server/proto --python_out=api_server/proto api_server/proto/auth.proto

message AuthenticateArgs {
  optional string gameId = 1;
  optional string userId = 2;
}

message AuthenticateOutput {
  optional string token = 1;
  optional string userId = 2;
  optional bool showBranding = 3 [default = false];
  optional string playerInsightState = 4;
  optional bool isSocialNetworkUser = 5 [default = false];
  optional bool isInstalledByPublishingNetwork = 6 [default = false];
  optional bool deprecated1 = 7 [default = false];
  optional string apiSecurity = 8;
  repeated string apiServerHosts = 9;
}

message KeyValuePair {
  optional string key = 1;
  optional string value = 2;
}

message SocialRefreshOutput {
    optional SocialProfile myProfile = 1;
    repeated SocialProfile friends = 2;
    repeated string blocked = 3;
}

message SocialProfile {
    optional string userId = 1;
    optional string displayName = 2;
    optional string avatarUrl = 3;
    optional int64 lastOnline = 4;
    optional string countryCode = 5;
    optional string userToken = 6;
}

message CreateJoinRoomArgs {
  optional string roomId = 1;
  optional string roomType = 2;
  optional bool visible = 3;
  repeated KeyValuePair roomData = 4;
  repeated KeyValuePair joinData = 5;
  optional bool isDevRoom = 6;
}

message CreateJoinRoomOutput {
  optional string roomId = 1;
  optional string joinKey = 2;
  repeated ServerEndpoint endpoints = 3;
}

message CreateJoinRoomError {
  optional string message = 1;
  optional int32 errorCode = 2;
}

message ServerEndpoint {
  optional string address = 1;
  optional int32 port = 2;
}

message WriteErrorArgs {
  optional string source = 1;
  optional string error = 2;
  optional string details = 3;
  optional string stacktrace = 4;
  repeated KeyValuePair extraData = 5;
}

message WriteErrorError {
  optional int32 errorCode = 1;
  optional string message = 2;
}

message LoadObjectsArgs {
  repeated BigDBObjectId objectIds = 1;
}

message LoadObjectsOutput {
  repeated BigDBObject objects = 1;
}

message BigDBObjectId {
  optional string table = 1;
  repeated string keys = 2;
}

message BigDBObject {
  optional string key = 1;
  optional string version = 2;
  repeated ObjectProperty properties = 3;
  optional uint32 creator = 4;
}

message ObjectProperty {
  optional string name = 1;
  optional ValueObject value = 2;
}

message ValueObject {
  enum ValueType {
    STRING = 0;
    INT32 = 1;
    UINT = 2;
    LONG = 3;
    BOOL = 4;
    FLOAT = 5;
    DOUBLE = 6;
    BYTE_ARRAY = 7;
    DATETIME = 8;
    ARRAY = 9;
    OBJECT = 10;
  }

  optional ValueType valueType = 1;
  optional string string = 2;
  optional int32 int32 = 3;
  optional uint32 uInt = 4;
  optional int64 long = 5;
  optional bool bool = 6;
  optional float float = 7;
  optional double double = 8;
  optional bytes byteArray = 9;
  optional int64 dateTime = 10;
  repeated ArrayProperty arrayProperties = 11;
  repeated ObjectProperty objectProperties = 12;
}

message ArrayProperty {
  optional int32 index = 1;
  optional ValueObject value = 2;
}
